@page "/Reportar"
@using Microsoft.AspNetCore.Authorization;
@inject AuthenticationStateProvider AuthState
@inject IHttpClientFactory ClientFactory
<div class="mb-3 bg-white p-3 border">
    <div class="d-flex justify-content-between mb-3">
        <div>
            <h1>
                <a href="/Pontos" class="text-dark text-decoration-none">
                    Reportar
                </a>
            </h1>
        </div>

        <button class="btn btn-outline-dark" onclick="history.back(-1)">
            Voltar
        </button>
    </div>

    <h4>Combate às fake news</h4>
    <p>
        <span class="lead">
            Vamos trabalhar juntos no combate à desinformação.
        </span>
    </p>
    <p class="alert alert-warning">
        Caso tenha visto alguma notícia falsa ou suspeita, nos informe através do formulário abaixo:
    </p>
    <div class="form-group">
        <EditForm Model="@model">
            <div class="form-group">
                <label class="form-label">Link denunciado:</label>
                <InputText type="url" class="form-control" @bind-Value="@model.UrlDenunciada" />
            </div>
            <div class="form-group">
                <label class="form-label">Descrição:</label>
                <InputTextArea rows="5" class="form-control" @bind-Value="@model.Descricao" placeholder="Descreva o que está sendo denunciado" />
            </div>
            <div class="form-group mt-3">
                <button class="btn btn-primary" type="submit">
                    Enviar
                </button>

                
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public bool ExibirBotaoVoltar { get; set; } = false;
    private Denuncia model = new();

    private UsuarioDTO? UsuarioLogado { get; set; }

    protected override async Task OnInitializedAsync()
    {
        HttpClient Http = ClientFactory.CreateClient("private");

        try
        {

            var authState = await AuthState.GetAuthenticationStateAsync();
            var user = authState.User;

            HttpResponseMessage result;
            var email = user.Identity.Name;
            result = await Http.PostAsJsonAsync<UsuarioDTO>($"Usuarios/ObterUsuarioLogado", new UsuarioDTO { Email = email });

            if (result.IsSuccessStatusCode)
                UsuarioLogado = await result.Content.ReadFromJsonAsync<UsuarioDTO>();

        }
        catch (Exception e)
        {
            Console.Write(e);
        }
    }

}