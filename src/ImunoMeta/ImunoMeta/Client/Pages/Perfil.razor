@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims;
@using System.Text.Json;
@inject IHttpClientFactory ClientFactory
@inject AuthenticationStateProvider AuthState
@page "/Perfil/{id?}"
@attribute [Authorize]
<div class="mb-3 border bg-white p-3">
    <div class="d-flex justify-content-between mb-3">
        <div>
            <h1>Perfil</h1>
        </div>
        <button class="btn btn-outline-dark" onclick="history.back(-1)">
            Voltar
        </button>

    </div>





    @if (Usuario == null)
    {
        <p>Carregando...</p>
    }
    else
    {
        <div class="row">
            <div class="col-3">
                <img src="/Avatar/@Usuario.UrlAvatar" class="w-100 mb-3">
                <h4>@Usuario.Nome</h4>
                <a href="#">Alterar senha</a> <br />
                <a href="/identity/account/logout">Sair</a> <br />
            </div>
            <div class="col-9">
                <div class="alert alert-info">
                    Página em construção.
                </div>
            </div>
        </div>

    }
</div>
@code {
    [Parameter]
    public string? Id { get; set; }
    public bool autenticado { get; set; }

    private UsuarioDTO? Usuario { get; set; }

    protected override async Task OnInitializedAsync()
    {
        HttpClient Http = ClientFactory.CreateClient("private");

        try
        {

            var authState = await AuthState.GetAuthenticationStateAsync();
            var user = authState.User;
            autenticado = user.Identity.IsAuthenticated;

            HttpResponseMessage result;

            var email = user.Identity.Name;
            if (string.IsNullOrEmpty(Id))
            {
                result = await Http.PostAsJsonAsync<UsuarioDTO>($"Usuarios/ObterUsuarioLogado", new UsuarioDTO { Email = email });

                if (result.IsSuccessStatusCode)
                    Usuario = await result.Content.ReadFromJsonAsync<UsuarioDTO>();
            }
            else
            {
                Usuario = await Http.GetFromJsonAsync<UsuarioDTO>($"Usuarios/Obter/{Id}");
            }
        }
        catch (Exception e)
        {
            Console.Write(e);
        }
    }

}
