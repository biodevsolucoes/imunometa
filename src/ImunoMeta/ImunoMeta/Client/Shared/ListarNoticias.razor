@inject IHttpClientFactory ClientFactory

<style>
    /* Estilos para a modal */
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: #fff;
        padding: 20px;
        max-width: 1200px;
        max-height: 500px;
        overflow-y: auto;
    }

    .modal-close {
        position: absolute;
        top: 10px;
        right: 20px;
        cursor: pointer;
    }
</style>

<div class="mb-3 border bg-white p-3">
    <div class="d-flex justify-content-between mb-3">
        <div class="d-flex justify-content-between w-100">
            <h1>
                <a href="/Noticias" class="text-dark text-decoration-none">
                    Notícias
                </a>
            </h1>
        @if (!ExibirBotaoVoltar)
        {
            <a class="btn btn-danger text-white d-flex align-items-center" href="/Reportar">
                    <i class="fa-sharp fa-solid fa-circle-exclamation p-2"></i><strong>Denunciar Fake-News</strong>
            </a>
        }
        </div>
        @if (ExibirBotaoVoltar)
        {   
            <button class="btn btn-outline-dark" onclick="history.back(-1)">
                Voltar
            </button>
        }
    </div>

    @if (NoticiasRecentes.Any())
    {
        foreach (var noticia in NoticiasRecentes)
        {
            <div class="row mb-4">
                <img src="@noticia.UrlImagemCapa" class="col-12 mb-2 mb-sm-0 col-sm-4">
                <div class="col-12 col-sm-8">
                    <h4>@noticia.Titulo</h4>
                    <p>@noticia.Resumo</p>
                </div>
                <div class="d-flex justify-content-end">
                    <button type="button" class="btn btn-primary text-white" @onclick="() => MostrarModal = noticia.Id"><i class="fa-solid fa-share-nodes p-1 text-white"></i>Compartilhar</button>
                </div>
            </div>
            <div class="modal @(MostrarModal == noticia.Id ? "d-flex" : "d-none")">
                <div class="modal-overlay" @onclick="() => {MostrarModal = Guid.Empty; MostrarAlerta = false;}"></div>
                <div class="modal-content">
                    @if (MostrarAlerta)
                    {
                        <span class="modal-close" @onclick="() => {MostrarModal = Guid.Empty; MostrarAlerta = false;}"><i class="fa-solid fa-xmark"></i></span>
                        <div class="alert alert-warning mt-3">
                            <strong>Entrar em suas redes sociais não foi implementado a nível de protótipo.</strong>
                        </div>
                    }
                    else
                    {
                        <span class="modal-close" @onclick="() => MostrarModal = Guid.Empty"><i class="fa-solid fa-xmark"></i></span>
                        <span class="h5">Compartilhe com amigos</span>
                        <div class="d-flex justify-content-around border border-dark rounded mb-3">
                            <a class="h1" @onclick="() => MostrarAlerta = true" style="cursor: pointer; color: #3b5998;"><i class="fa-brands fa-facebook"></i></a>
                            <a class="h1" @onclick="() => MostrarAlerta = true" style="cursor: pointer; color: #25d366;"><i class="fa-brands fa-whatsapp"></i></a>
                            <a class="h1" @onclick="() => MostrarAlerta = true" style="cursor: pointer; color: #1da1f2;"><i class="fa-brands fa-twitter"></i></a>
                            <a class="h1" @onclick="() => MostrarAlerta = true" style="cursor: pointer; color: #7289da;"><i class="fa-brands fa-telegram"></i></a>
                            <a class="h1" @onclick="() => MostrarAlerta = true" style="cursor: pointer; color: #0088cc;"><i class="fa-brands fa-discord"></i></a>
                        </div>
                        <img src="@noticia.UrlImagemCapa" class="img-fluid border-1" title="@noticia.Titulo">
                    }
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-info">
            Nenhuma notícia cadastrada.
        </div>
    }

</div>

@code {
    private string termoPesquisa { get; set; }

    private List<Noticia> NoticiasRecentes = new List<Noticia>();
    public Guid MostrarModal;
    public bool MostrarAlerta = false;


    [Parameter]
    public int Quantidade { get; set; } = 1;

    [Parameter]
    public bool ExibirBotaoVoltar { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        HttpClient Http = ClientFactory.CreateClient("public");

        try
        {
            NoticiasRecentes = await Http.GetFromJsonAsync<List<Noticia>>($"Noticias/Recentes/{Quantidade}");
        }
        catch (Exception e)
        {
            Console.Write(e);
        }
    }
}